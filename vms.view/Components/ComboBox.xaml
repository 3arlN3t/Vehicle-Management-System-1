<!--
//=================================================================================================
// Resource Dictionary.
// ComboBox styles.
// Contains the set of WPF styles for ComboBox control (Aero theme for Windows).
//=================================================================================================
-->
<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:aero="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/vms.view;component/Components/Brushes.xaml" />
    <ResourceDictionary Source="/vms.view;component/Components/ScrollBar.xaml" />
  </ResourceDictionary.MergedDictionaries>

	<!-- Down Arrow -->
	<Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>

	

	<!-- ComboBox Read-only Toggle Button Template. -->
	<ControlTemplate x:Key="ComboBoxReadonlyToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
		<aero:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="true">
			<Grid HorizontalAlignment="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
				<Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center" Margin="3,1,0,0" VerticalAlignment="Center"/>
			</Grid>
		</aero:ButtonChrome>
		<ControlTemplate.Triggers>
			<Trigger Property="IsChecked" Value="true">
				<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>



	<!-- ComboBox Read-only Toggle Button Style. -->
	<Style x:Key="ComboBoxReadonlyToggleButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="ClickMode" Value="Press"/>
		<Setter Property="Template" Value="{StaticResource ComboBoxReadonlyToggleButtonTemplate}" />
	</Style>


	
	<!-- ScrollViewer template. -->
	<ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
		<Grid x:Name="Grid" Background="{TemplateBinding Background}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="*"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
			<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
			<ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1"
				Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
				Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"
				Style="{StaticResource ScrollBarStyle}"/>
			<ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0"
				Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1"
				Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"  ViewportSize="{TemplateBinding ViewportWidth}"
				Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ScrollBarStyle}"/>
		</Grid>
	</ControlTemplate>

	
	
	<!-- ComboBox control template. -->
	<ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
		<Grid x:Name="MainGrid" SnapsToDevicePixels="true">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
			</Grid.ColumnDefinitions>
			<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
				<aero:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
					<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
						<ScrollViewer x:Name="DropDownScrollViewer" Template="{StaticResource ScrollViewerControlTemplate}">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
									<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
								</Canvas>
								<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</Grid>
						</ScrollViewer>
					</Border>
				</aero:SystemDropShadowChrome>
			</Popup>
			<ToggleButton BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxReadonlyToggleButtonStyle}"/>
			<ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
			<Grid Grid.Column="0" x:Name="validationElement" Visibility="Collapsed" SnapsToDevicePixels="True" HorizontalAlignment="Right" >
				<Grid HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0.5,0,0.5" Width="14" Height="14" Background="Transparent">
					<Ellipse x:Name="validationEllipse" Stroke="#FFFFFFFF" Fill="{StaticResource ErrorValidationBrush}" StrokeThickness="0" >
						<Ellipse.Effect>
							<DropShadowEffect BlurRadius="4" ShadowDepth="0" Color="#FF919191" Direction="90"/>
						</Ellipse.Effect>
					</Ellipse>
					<TextBlock Text="!" FontWeight="Bold" Margin="0,0,0,2" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" >
						<TextBlock.Effect>
							<DropShadowEffect ShadowDepth="0" BlurRadius="2" Color="#FF685D5D"/>
						</TextBlock.Effect>
					</TextBlock>
				</Grid>
			</Grid>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
				<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
				<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
			</Trigger>
			<Trigger Property="HasItems" Value="false">
				<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
				<Setter Property="Background" Value="#FFF4F4F4"/>
			</Trigger>
			<Trigger Property="IsGrouping" Value="true">
				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
			</Trigger>
			<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
				<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
				<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>



	<!-- ComboBox item style. -->
	<Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="Padding" Value="3,0,3,0"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
						<TextBlock x:Name="ContentElement" Text="{Binding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsHighlighted" Value="true">
							<Setter Property="Foreground" Value="White"/>
							<Setter Property="Background" TargetName="Bd" Value="#E63399FF"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



	<!-- ComboBox ToggleButton style-->
	<Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="ClickMode" Value="Press"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<aero:ButtonChrome Name="Chrome"
						Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						RenderMouseOver="{TemplateBinding IsMouseOver}"
						RenderPressed="{TemplateBinding IsPressed}"
						RoundCorners="false"
						SnapsToDevicePixels="true">
						<Path Name="Arrow"
							Margin="0,1,0,0"
							Fill="Black"
							Data="{StaticResource DownArrowGeometry}"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"/>
					</aero:ButtonChrome>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="Chrome" Property="RenderPressed" Value="true"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Arrow" Property="Fill" Value="#AFAFAF"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	
	<!-- ComboBox editable textBox style.-->
	<Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<ScrollViewer x:Name="PART_ContentHost"
						Focusable="false"
						HorizontalScrollBarVisibility="Hidden"
						VerticalScrollBarVisibility="Hidden"
						Background="Transparent"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	
	
	<!-- ComboBox editable template. -->
	<ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
		<Grid Name="Placement" SnapsToDevicePixels="true">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>

			<Popup Name="PART_Popup"
                   Grid.ColumnSpan="2"
                   AllowsTransparency="true"
                   Placement="Bottom"
                   IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
				<aero:SystemDropShadowChrome Name="Shdw"
					Color="Transparent"
					MinWidth="{Binding ElementName=Placement,Path=ActualWidth}"
					MaxHeight="{TemplateBinding MaxDropDownHeight}">
					<Border x:Name="DropDownBorder"
						BorderThickness="1"
						BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
						Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
						<ScrollViewer Name="DropDownScrollViewer">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
									<Rectangle 
										Name="OpaqueRect"
										Height="{Binding ElementName=DropDownBorder,Path=ActualHeight}" 
										Width="{Binding ElementName=DropDownBorder,Path=ActualWidth}" 
										Fill="{Binding ElementName=DropDownBorder,Path=Background}" />
								</Canvas>
								<ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</Grid>
						</ScrollViewer>
					</Border>
				</aero:SystemDropShadowChrome>
			</Popup>

			<aero:ListBoxChrome x:Name="Border"
				Grid.ColumnSpan="2"
				BorderThickness="{TemplateBinding BorderThickness}"
				BorderBrush="{TemplateBinding BorderBrush}"
				Background="{TemplateBinding Background}"
				RenderMouseOver="{TemplateBinding IsMouseOver}"
				RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"/>
			<TextBox Name="PART_EditableTextBox"
				Margin="{TemplateBinding Padding}"
				Style="{StaticResource ComboBoxEditableTextBox}"
				HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
				VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
<!--			IsReadOnly="{Binding Path=IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" -->
			<ToggleButton Grid.Column="1"
                Style="{StaticResource ComboBoxToggleButton}"
                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsKeyboardFocusWithin" Value="true">
				<Setter Property="Foreground" Value="Black"/>
			</Trigger>
			<Trigger Property="IsDropDownOpen" Value="true">
				<Setter TargetName="Border" Property="RenderFocused" Value="true"/>
			</Trigger>
			<Trigger Property="HasItems" Value="false">
				<Setter TargetName="DropDownBorder" Property="Height" Value="95"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
				<Setter Property="Background" Value="#FFF4F4F4"/>
			</Trigger>
			<Trigger Property="IsGrouping" Value="true">
				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
			</Trigger>
			<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
				<Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5"/>
				<Setter TargetName="Shdw" Property="Color" Value="#71000000"/>
			</Trigger>
			<Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false" >
				<Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding ElementName=DropDownScrollViewer, Path=VerticalOffset}" />
				<Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding ElementName=DropDownScrollViewer, Path=HorizontalOffset}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>



	<!-- ComboBox base style. -->
	<Style x:Key="ComboBoxBaseStyle" TargetType="{x:Type ComboBox}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Margin" Value="5"/>
		<Setter Property="Height" Value="24"/>
		<Setter Property="FontFamily" Value="Calibri"/>
		<Setter Property="FontSize" Value="13"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
		<Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
		<Setter Property="Padding" Value="4,3"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
					<GradientStop Color="#F3F3F3" Offset="0"/>
					<GradientStop Color="#EBEBEB" Offset="0.5"/>
					<GradientStop Color="#DDDDDD" Offset="0.5"/>
					<GradientStop Color="#CDCDCD" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Style.Triggers>
			<Trigger Property="IsEditable" Value="true">
				<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
				<Setter Property="IsTabStop" Value="false"/>
				<Setter Property="Padding" Value="3"/>
				<Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
			</Trigger>
		</Style.Triggers>
	</Style>



	<!-- ComboBox default style. -->
	<Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ComboBoxBaseStyle}">
		<Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="Black"/>
			</Trigger>
		</Style.Triggers>
	</Style>



	<!-- Lookup ComboBox style. -->
	<Style x:Key="LookupComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ComboBoxBaseStyle}">
		<Setter Property="Foreground" Value="SteelBlue"/>
		<Setter Property="BorderBrush" Value="LightBlue"/>
		<Setter Property="IsEditable" Value="True"/>
		<Setter Property="IsTextSearchEnabled" Value="True"/>
		<Setter Property="StaysOpenOnEdit" Value="True"/>
	</Style>

</ResourceDictionary>
